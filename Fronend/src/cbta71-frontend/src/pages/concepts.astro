---
// src/pages/concepts.astro
import Layout from '../layouts/Layout.astro';
// --- DATOS MOCK DE EJEMPLO ---
// Nota: La propiedad 'status' ahora se usa para el filtrado: 'active' o 'finished'
const concepts = [
    { id: 1, title: 'Colegiatura Semestre I', period: 'AGO/2024', amount: 1067.00, description: 'Pago de colegiatura correspondiente al primer semestre del año 2024', status: 'active' },
    { id: 2, title: 'Inscripción Semestral', period: 'FEB/2025', amount: 1200.00, description: 'Cuota obligatoria por concepto de inscripción al semestre.', status: 'active' },
    { id: 3, title: 'Seguro Escolar Anual', period: '2024', amount: 150.00, description: 'Cobertura de seguro por accidentes durante el ciclo escolar.', status: 'finished' },
    { id: 4, title: 'Examen de Certificación', period: 'JUN/2024', amount: 200.00, description: 'Costo del examen final de certificación técnica.', status: 'active' },
    { id: 5, title: 'Donación Voluntaria', period: 'SEP/2024', amount: 50.00, description: 'Aportación voluntaria para mejora de instalaciones.', status: 'finished' },
];

// JSON.stringify es necesario para pasar la lista de Astro a JavaScript de Alpine.js
// IMPORTANTE: Escapamos las comillas internas con JSON.stringify
const conceptsJson = JSON.stringify(JSON.stringify(concepts));
---

<Layout title="Conceptos - CBTA 71">
    
    <!-- Contenedor principal para Alpine.js -->
    <!-- client:load asegura que el JS se ejecute en el navegador -->
    <div 
        x-data="{ 
            activeTab: 'all', 
            concepts: JSON.parse(JSON.parse({conceptsJson})), 
            
            get filteredConcepts() {
                if (this.activeTab === 'all') {
                    return this.concepts;
                }
                return this.concepts.filter(concept => concept.status === this.activeTab);
            },

            finishConcept(id) {
                if (typeof customConfirm !== 'undefined') {
                    customConfirm('¿Estás seguro de que quieres finalizar este concepto?');
                } else {
                    console.log('Simulación de confirmación: Concepto Finalizado');
                }
                
                const index = this.concepts.findIndex(c => c.id === id);
                if (index !== -1 && this.concepts[index].status === 'active') {
                    let newConcepts = [...this.concepts];
                    newConcepts[index].status = 'finished';
                    this.concepts = newConcepts;
                    console.log(`Concepto ${id} finalizado.`);
                }
            },
            
            editConcept(id) {
                console.log(`Navegando a la página de edición para el Concepto ${id}`);
                window.location.href = `/new?id=${id}&data=${encodeURIComponent(JSON.stringify(this.concepts.find(c => c.id === id)))}`;
            }
        }"
        class="space-y-6 max-w-4xl mx-auto p-4"
    >

        <div class="flex items-center gap-4 text-2xl md:text-3xl font-bold text-gray-800 border-b pb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-users-group h-8 w-8 text-[#2e594d]" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path d="M10 13a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
                <path d="M8 21v-1a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v1"></path>
                <path d="M15 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
                <path d="M17 10h2a2 2 0 0 1 2 2v1"></path>
                <path d="M5 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
                <path d="M3 13v-1a2 2 0 0 1 2 -2h2"></path>
            </svg>
            <h1>Conceptos</h1>
        </div>

        <div class="bg-white p-6 rounded-xl shadow-lg">
            
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6">
                <h2 class="text-xl font-bold text-gray-700 flex items-center gap-2 mb-4 sm:mb-0">
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-list" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M9 6l11 0"></path>
                        <path d="M9 12l11 0"></path>
                        <path d="M9 18l11 0"></path>
                        <path d="M5 6l0 .01"></path>
                        <path d="M5 12l0 .01"></path>
                        <path d="M5 18l0 .01"></path>
                    </svg>
                    Todos los conceptos
                </h2>

                <a 
                    href="/new" 
                    class="flex items-center gap-2 px-4 py-2 bg-[#e6f4e6] text-[#2e594d] font-semibold rounded-lg shadow-md hover:bg-[#d0e9d0] transition-all duration-200"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                        <path d="M12 5l0 14"></path>
                        <path d="M5 12l14 0"></path>
                    </svg>
                    Agregar
                </a>
            </div>
            
            <div class="flex flex-wrap gap-3 mb-6">
                <button 
                    @click="activeTab = 'all'"
                    :class="{ 
                        'bg-[#2e594d] text-white': activeTab === 'all', 
                        'bg-gray-100 text-gray-700 hover:bg-gray-200': activeTab !== 'all' 
                    }"
                    class="px-4 py-2 font-semibold rounded-lg transition-colors duration-150 shadow-sm"
                >
                    Todos
                </button>
                
                <button 
                    @click="activeTab = 'active'"
                    :class="{ 
                        'bg-[#2e594d] text-white': activeTab === 'active', 
                        'bg-green-100 text-green-700 hover:bg-green-200': activeTab !== 'active' 
                    }"
                    class="px-4 py-2 font-semibold rounded-lg transition-colors duration-150 shadow-sm"
                >
                    Activos
                </button>
                
                <button 
                    @click="activeTab = 'finished'"
                    :class="{ 
                        'bg-[#2e594d] text-white': activeTab === 'finished', 
                        'bg-red-100 text-red-700 hover:bg-red-200': activeTab !== 'finished' 
                    }"
                    class="px-4 py-2 font-semibold rounded-lg transition-colors duration-150 shadow-sm"
                >
                    Finalizados
                </button>
            </div>

            <div class="space-y-4">
                
                <template x-for="concept in filteredConcepts" :key="concept.id">
                    <div 
                        class="p-4 border border-gray-200 rounded-xl shadow-md flex flex-col md:flex-row justify-between items-start md:items-center bg-white transition-all duration-300"
                    >
                        <div class="flex-1 min-w-0 pr-4 mb-4 md:mb-0">
                            <h3 class="text-lg font-bold text-gray-900 truncate" 
                                x-text="`${concept.title} - ${concept.period}`">
                            </h3>
                            <p class="text-3xl font-extrabold text-[#2e594d] my-1" 
                                x-text="`$${concept.amount.toFixed(2)}`">
                            </p>
                            <p class="text-sm text-gray-500" 
                                x-text="concept.description">
                            </p>
                            <span 
                                x-show="concept.status === 'finished' && activeTab !== 'finished'" 
                                class="mt-2 inline-block px-2 py-0.5 text-xs font-semibold rounded-full bg-red-100 text-red-800"
                            >
                                Finalizado
                            </span>
                        </div>
                        
                        <div class="flex flex-col space-y-2 w-full md:w-auto md:min-w-[120px]">
                            <button 
                                x-show="concept.status === 'active'"
                                @click="finishConcept(concept.id)"
                                class="flex items-center justify-center gap-2 px-3 py-2 bg-green-600 text-white font-semibold rounded-lg shadow-md hover:bg-green-700 transition-all duration-200 w-full"
                            >
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-checkbox" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M9 11l3 3l8 -8"></path>
                                    <path d="M20 12v3a5 5 0 0 1 -5 5h-4a5 5 0 0 1 -5 -5v-4a5 5 0 0 1 5 -5h3"></path>
                                </svg>
                                Finalizar
                            </button>

                            <button 
                                @click="editConcept(concept.id)"
                                class="flex items-center justify-center gap-2 px-3 py-2 border border-gray-300 text-gray-700 font-semibold rounded-lg shadow-sm hover:bg-gray-50 transition-all duration-200 w-full"
                            >
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-edit" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1"></path>
                                    <path d="M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.415v3h3l8.415 -8.415z"></path>
                                    <path d="M16 5l3 3"></path>
                                </svg>
                                Editar
                            </button>
                            
                            <button
                                x-show="concept.status === 'finished' && activeTab !== 'active'"
                                disabled
                                class="flex items-center justify-center gap-2 px-3 py-2 bg-red-200 text-red-800 font-semibold rounded-lg w-full cursor-not-allowed"
                            >
                                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-check" width="20" height="20" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                    <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                                    <path d="M5 12l5 5l10 -10"></path>
                                </svg>
                                Finalizado
                            </button>
                        </div>
                    </div>
                </template>
                
                <div x-show="filteredConcepts.length === 0" class="text-center py-10 text-gray-500 bg-gray-50 rounded-lg">
                    <p class="font-semibold text-lg">No se encontraron conceptos</p>
                    <p>Ajusta el filtro o agrega un nuevo concepto para comenzar.</p>
                </div>
                
            </div>
        </div>
    </div>
</Layout>