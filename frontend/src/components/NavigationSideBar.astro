---
import LinksNavbar from "./LinksNavbar.astro";

interface Props {
    isMovil?: boolean;
}

const { isMovil = false } = Astro.props;
---

<div
    id={`${!isMovil ? "container-navbar" : "container-navbarMobil"}`}
    class={`bg-green-500 ${!isMovil ? "w-28 h-full fixed hidden lg:visible lg:block" : "w-32 fixed inset-y-0 right-0 z-10 hidden"} `}
>
    <nav class="w-full flex flex-col gap-2 pt-2 px-1 text-white">
        {
            !isMovil ? (
                <button
                    id="toggleText"
                    class="w-full flex items-center justify-center cursor-pointer"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-8"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
                        />
                    </svg>
                </button>
            ) : (
                <button
                    id="closeNavbar"
                    class="w-full flex items-center justify-end cursor-pointer"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-8"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M6 18 18 6M6 6l12 12"
                        />
                    </svg>
                </button>
            )
        }

        <!-- Inicio -->
        <LinksNavbar url="/home" title="Inicio" isMovil={isMovil}>
            <svg
                slot="iconFilled"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                class="size-6"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="size-6"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
                    ></path>
                </svg>
            </svg>
            <svg
                slot="iconOutline"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-6"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="size-6"
                >
                    <path
                        d="M11.47 3.841a.75.75 0 0 1 1.06 0l8.69 8.69a.75.75 0 1 0 1.06-1.061l-8.689-8.69a2.25 2.25 0 0 0-3.182 0l-8.69 8.69a.75.75 0 1 0 1.061 1.06l8.69-8.689Z"
                    ></path>
                    <path
                        d="m12 5.432 8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 0 1-.75-.75v-4.5a.75.75 0 0 0-.75-.75h-3a.75.75 0 0 0-.75.75V21a.75.75 0 0 1-.75.75H5.625a1.875 1.875 0 0 1-1.875-1.875v-6.198a2.29 2.29 0 0 0 .091-.086L12 5.432Z"
                    ></path>
                </svg>
            </svg>
        </LinksNavbar>

        <!-- Personal -->
        <LinksNavbar url="/roles" title="Personal" isMovil={isMovil}>
            <svg
                slot="iconFilled"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
                class="size-6"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="size-6"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z"
                    ></path>
                </svg>
            </svg>
            <svg
                slot="iconOutline"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-6"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="size-6"
                >
                    <path
                        fill-rule="evenodd"
                        d="M8.25 6.75a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0ZM15.75 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM2.25 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM6.31 15.117A6.745 6.745 0 0 1 12 12a6.745 6.745 0 0 1 6.709 7.498.75.75 0 0 1-.372.568A12.696 12.696 0 0 1 12 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 0 1-.372-.568 6.787 6.787 0 0 1 1.019-4.38Z"
                        clip-rule="evenodd"></path>
                    <path
                        d="M5.082 14.254a8.287 8.287 0 0 0-1.308 5.135 9.687 9.687 0 0 1-1.764-.44l-.115-.04a.563.563 0 0 1-.373-.487l-.01-.121a3.75 3.75 0 0 1 3.57-4.047ZM20.226 19.389a8.287 8.287 0 0 0-1.308-5.135 3.75 3.75 0 0 1 3.57 4.047l-.01.121a.563.563 0 0 1-.373.486l-.115.04c-.567.2-1.156.349-1.764.441Z"
                    ></path>
                </svg>
            </svg>
        </LinksNavbar>
    </nav>
</div>

<div id="bg-navbar" class="fixed inset-0 bg-black/25 hidden"></div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const collapsed = localStorage.getItem("navbarCollapsed") === "true";
        const button = document.getElementById(
            "toggleText",
        ) as HTMLButtonElement;
        const divNavbar = document.getElementById(
            "container-navbar",
        ) as HTMLDivElement;
        const divNavbarMobil = document.getElementById(
            "container-navbarMobil",
        ) as HTMLDivElement;
        const bgNavbar = document.getElementById("bg-navbar") as HTMLDivElement;
        const textlink = document.querySelectorAll(".showText");
        const links = document.querySelectorAll(".links-navbar");
        const body = document.querySelector("body") as HTMLBodyElement;
        const closeButton = document.getElementById(
            "closeNavbar",
        ) as HTMLButtonElement;

        if (collapsed) {
            textlink.forEach((e) => e.classList.add("hidden"));
            links.forEach((e) => {
                e.classList.add("justify-center");
                e.classList.remove("pl-2");
            });
            divNavbar.classList.remove("w-28");
            divNavbar.classList.add("w-20");
        }

        button.addEventListener("click", () => {
            textlink.forEach((e) => e.classList.toggle("hidden"));
            links.forEach((e) => {
                e.classList.toggle("justify-center");
                e.classList.toggle("pl-2");
            });
            divNavbar.classList.toggle("w-28");
            divNavbar.classList.toggle("w-20");

            const isNowCollapsed = divNavbar.classList.contains("w-20");
            console.log(divNavbar.classList);
            localStorage.setItem("navbarCollapsed", String(isNowCollapsed));
        });

        bgNavbar.addEventListener("click", () => {
            hideNavbar();
        })

        closeButton.addEventListener("click", hideNavbar);

        function hideNavbar() {
            divNavbarMobil.classList.remove("show-navbar");
            setTimeout(() => {
                divNavbarMobil.classList.add("hidden");
            }, 300); // espera a que termine la transici√≥n
            bgNavbar.classList.add("hidden");
            body.classList.remove("overflow-y-hidden");
        }
    });
</script>

<style>
    #container-navbarMobil {
        visibility: hidden;
        transform: translateX(100%);
        transition: 0.4s ease-in-out;
    }

    #container-navbarMobil.show-navbar {
        transform: translateX(0);
        transition: 0.4s ease-in-out;
        opacity: 1;
        visibility: visible;
    }
</style>
