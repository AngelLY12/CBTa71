---
// src/components/CardInfo.astro - Versión FINAL con ÍCONOS DE COLOR y AÑO AUTOMÁTICO

interface Props {
    title: string;
    value: string;
    description: string;
    icon: 'students' | 'pending' | 'recaudado';
    href: string;
}

const { title, value, description, icon, href } = Astro.props; 

// --- LÓGICA DE FECHA AUTOMÁTICA ---
let finalDescription = description;
// Verifica si es la tarjeta de estudiantes para sobrescribir la descripción con el año actual
if (icon === 'students') {
    const currentYear = new Date().getFullYear();
    finalDescription = `Matriculados ${currentYear}`;
}
// ----------------------------------

// Colores de los íconos
const iconColors = {
    students: 'text-[#3b7666]',  // Verde oscuro
    pending: 'text-yellow-600',  // Amarillo/Naranja para pendiente
    recaudado: 'text-blue-600',  // Azul para dinero/recaudado
};

// Función para obtener el SVG de los íconos
const getIconSvg = (iconName: string, sizeClass: string) => {
    const getSvgContent = (className: string) => {
            switch (iconName) {
                case 'students':
                    return `<svg xmlns="http://www.w3.org/2000/svg" class="${className}" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 13a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path><path d="M8 21v-1a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v1"></path><path d="M15 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path><path d="M17 10h2a2 2 0 0 1 2 2v1"></path><path d="M5 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path><path d="M3 10h2a2 2 0 0 1 2 2v1"></path></svg>`;
                case 'pending':
                    return `<svg xmlns="http://www.w3.org/2000/svg" class="${className}" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M3 12a9 9 0 1 0 18 0a9 9 0 1 0 -18 0"></path><path d="M12 7v5l3 3"></path></svg>`;
                case 'recaudado':
                    return `<svg xmlns="http://www.w3.org/2000/svg" class="${className}" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M7 9m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z"></path><path d="M14 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0"></path><path d="M17 9v-2a2 2 0 0 0 -2 -2h-10a2 2 0 0 0 -2 2v6a2 2 0 0 0 2 2h2"></path></svg>`;
                default:
                    return '';
            }
    }

    return getSvgContent(sizeClass);
};
---

<a href={href} class="bg-white px-4 py-3 rounded-lg border border-[#3b7666]/30 shadow-sm flex flex-col items-center justify-between h-auto w-full text-center
            transition-all duration-200 hover:shadow-lg focus:outline-none cursor-pointer">
    
    <div class="flex justify-between items-start w-full mb-2">
        <h3 class="text-sm font-medium text-gray-700">
            {title}
        </h3>
        {/* ÍCONO EN LA ESQUINA SUPERIOR DERECHA CON COLOR */}
        <span class="flex-shrink-0" class:list={[iconColors[icon]]} set:html={getIconSvg(icon, 'w-5 h-5')}></span>
    </div>
    
    <div class="flex flex-col items-center justify-center w-full mt-auto">
        <p class="text-xl font-bold text-gray-900 mb-0.5">{value}</p> 
        {/* DESCRIPCIÓN FINAL (CON AÑO ACTUAL PARA ESTUDIANTES) */}
        <p class="text-xs text-gray-500">{finalDescription}</p> 
    </div>
</a>