services:
    nginx:
        image: nginx:alpine
        container_name: nginx-laravel
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./storage:/var/www/storage
        depends_on:
            - app
        networks:
            - laravel
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
#            - .:/var/www
            - ./storage:/var/www/storage
        ports:
            - "9000:9000"
        depends_on:
            - db
            - redis
        networks:
            - laravel

    laravel-worker:
        build:
            context: .
        container_name: laravel-worker
        command: php artisan queue:work redis --sleep=3 --tries=3 --timeout=90 --backoff=5 --verbose
        restart: unless-stopped
        volumes:
#            - ./:/var/www
            - ./storage:/var/www/storage
        depends_on:
            - app
            - redis
        networks:
            - laravel
    db:
        image: mysql:8
        container_name: db-laravel
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
          - "3306:3306"
        volumes:
          - db_data:/var/lib/mysql
        networks:
            - laravel
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin-laravel
        restart: unless-stopped
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: root
        ports:
          - "8080:80"
        networks:
            - laravel
    redis:
        image: redis:alpine
        container_name: redis-laravel
        restart: unless-stopped
        ports:
        - "6379:6379"
        networks:
        - laravel
    k6:
        image: grafana/k6
        container_name: k6
        entrypoint: ["k6", "run", "--out", "influxdb=http://influxdb:8086/k6", "/scripts/test-basic.js"]
        volumes:
        - ./load-tests:/scripts
        depends_on:
        - nginx
        - influxdb
        networks:
        - laravel
    influxdb:
        image: influxdb:1.8
        container_name: influxdb
        restart: unless-stopped
        environment:
        - INFLUXDB_DB=k6
        - INFLUXDB_ADMIN_ENABLED=true
        ports:
        - "8086:8086"
        volumes:
        - influxdb_data:/var/lib/influxdb
        networks:
        - laravel
    grafana:
        image: grafana/grafana:latest
        container_name: grafana
        restart: unless-stopped
        environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
        ports:
        - "3000:3000"
        depends_on:
        - influxdb
        networks:
        - laravel
volumes:
  db_data:
  influxdb_data:

networks:
  laravel:
    driver: bridge
