---
import LinksNavbar from "./LinksNavbar.astro";
import { routesNavbar } from "../data/routes";

interface Props {
    isMovil?: boolean;
}

const { isMovil = false } = Astro.props;
---

<div
    id={`${!isMovil ? "container-navbar" : "container-navbarMobil"}`}
    class={`bg-green-500 ${!isMovil ? "w-28 h-full fixed hidden lg:visible lg:block" : "w-32 fixed inset-y-0 right-0 z-10 hidden"} `}
>
    <nav class="w-full flex flex-col gap-2 pt-2 px-1 text-white">
        {
            !isMovil ? (
                <button
                    id="toggleText"
                    class="w-full flex items-center justify-center cursor-pointer"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-8"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
                        />
                    </svg>
                </button>
            ) : (
                <button
                    id="closeNavbar"
                    class="w-full flex items-center justify-end cursor-pointer"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-8"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M6 18 18 6M6 6l12 12"
                        />
                    </svg>
                </button>
            )
        }

        <!-- Inicio -->
        {
            routesNavbar.map((route) => (
                <LinksNavbar url={route.url} title={route.name} isMovil={isMovil}>
                    <svg
                        slot="iconFilled"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="currentColor"
                        class="size-6"
                        set:html={route.svg.filled}
                    >
                    </svg>
                    <svg
                        slot="iconOutline"
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="size-6"
                        set:html={route.svg.outline}
                    >
                    </svg>
                </LinksNavbar>
            ))
        }
    </nav>
</div>

<div id="bg-navbar" class="fixed inset-0 bg-black/25 hidden"></div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const collapsed = localStorage.getItem("navbarCollapsed") === "true";
        const button = document.getElementById(
            "toggleText",
        ) as HTMLButtonElement;
        const divNavbar = document.getElementById(
            "container-navbar",
        ) as HTMLDivElement;
        const divNavbarMobil = document.getElementById(
            "container-navbarMobil",
        ) as HTMLDivElement;
        const bgNavbar = document.getElementById("bg-navbar") as HTMLDivElement;
        const textlink = document.querySelectorAll(".showText");
        const links = document.querySelectorAll(".links-navbar");
        const body = document.querySelector("body") as HTMLBodyElement;
        const closeButton = document.getElementById(
            "closeNavbar",
        ) as HTMLButtonElement;

        if (collapsed) {
            textlink.forEach((e) => e.classList.add("hidden"));
            links.forEach((e) => {
                e.classList.add("justify-center");
                e.classList.remove("pl-2");
            });
            divNavbar.classList.remove("w-28");
            divNavbar.classList.add("w-20");
        }

        button.addEventListener("click", () => {
            textlink.forEach((e) => e.classList.toggle("hidden"));
            links.forEach((e) => {
                e.classList.toggle("justify-center");
                e.classList.toggle("pl-2");
            });
            divNavbar.classList.toggle("w-28");
            divNavbar.classList.toggle("w-20");

            const isNowCollapsed = divNavbar.classList.contains("w-20");
            console.log(divNavbar.classList);
            localStorage.setItem("navbarCollapsed", String(isNowCollapsed));
        });

        bgNavbar.addEventListener("click", () => {
            hideNavbar();
        });

        closeButton.addEventListener("click", hideNavbar);

        function hideNavbar() {
            divNavbarMobil.classList.remove("show-navbar");
            setTimeout(() => {
                divNavbarMobil.classList.add("hidden");
            }, 300); // espera a que termine la transici√≥n
            bgNavbar.classList.add("hidden");
            body.classList.remove("overflow-y-hidden");
        }
    });
</script>

<style>
    #container-navbarMobil {
        visibility: hidden;
        transform: translateX(100%);
        transition: 0.4s ease-in-out;
    }

    #container-navbarMobil.show-navbar {
        transform: translateX(0);
        transition: 0.4s ease-in-out;
        opacity: 1;
        visibility: visible;
    }
</style>
